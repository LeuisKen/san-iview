<template>
    <div>
        <article>
            <h1>Input 输入框</h1>
            <anchor title="概述" h2></anchor>
            <p>基本表单组件，支持 input 和 textarea，并在原生控件基础上进行了功能扩展，可以组合使用。</p>
            <anchor title="代码示例" h2></anchor>
            <demo title="基础用法">
                <div slot="demo">
                    <i-input value="value" placeholder="请输入..." style="width: 300px"></i-input>
                </div>
                <div slot="desc">
                    <p>基本用法，可以使用 <code>value</code> 实现数据的双向绑定。</p>
                    <p>可以直接设置 style 来改变输入框的宽度，默认 100%。</p>
                </div>
                <i-code lang="html" slot="code">{{ code.base }}</i-code>
            </demo>
            <demo title="尺寸">
                <div slot="demo">
                    <i-row>
                        <i-col span="8">
                            <i-input value="{=value1=}" size="large" placeholder="large size"></i-input>
                        </i-col>
                        <i-col span="8">
                            <i-input value="{=value2=}" placeholder="default size"></i-input>
                        </i-col>
                        <i-col span="8">
                            <i-input value="{=value3=}" size="small" placeholder="small size"></i-input>
                        </i-col>
                    </i-row>
                </div>
                <div slot="desc">
                    <p>输入框有三种尺寸：大、默认（中）、小</p>
                    <p>通过设置<code>size</code>为<code>large</code>和<code>small</code>设置为大和小尺寸，不设置为默认（中）尺寸。</p>
                </div>
                <i-code lang="html" slot="code">{{ code.size }}</i-code>
            </demo>
            <demo title="带Icon的输入框">
                <div slot="demo">
                    <i-input value="{=value4=}" icon="ios-clock-outline" placeholder="请输入..." style="width: 200px"></i-input>
                </div>
                <div slot="desc">
                    <p>通过 <code>icon</code> 属性可以在输入框右边加一个图标。</p>
                    <p>点击图标，会触发 <code>on-click</code> 事件。</p>
                </div>
                <i-code lang="html" slot="code">{{ code.icon }}</i-code>
            </demo>
            <demo title="文本域">
                <div slot="demo">
                    <i-row>
                        <i-col span="12">
                            <i-input value="{=value5=}" type="textarea" placeholder="请输入..."></i-input>
                        </i-col>
                        <i-col span="12">
                            <i-input value="{=value6=}" type="textarea" placeholder="请输入..." rows="{{4}}"></i-input>
                        </i-col>
                    </i-row>
                </div>
                <div slot="desc">
                    <p>通过设置属性 <code>type</code> 为 <code>textarea</code> 来使用文本域，用于多行输入。</p>
                    <p>通过设置属性 <code>rows</code> 控制文本域默认显示的行数。</p>
                </div>
                <i-code lang="html" slot="code">{{ code.textarea }}</i-code>
            </demo>
            <demo title="适应文本高度的文本域">
                <div slot="demo">
                    <i-row gutter="{{8}}">
                        <i-col span="12">
                            <i-input value="{=value7=}" type="textarea" placeholder="请输入..."></i-input>
                        </i-col>
                        <i-col span="12">
                            <i-input value="{=value8=}" type="textarea" autosize="{{autosize}}" placeholder="请输入..."></i-input>
                        </i-col>
                    </i-row>
                </div>
                <div slot="desc">
                    <p>设置属性 <code>autosize</code>，文本域会自动适应高度的变化。</p>
                    <p><code>autosize</code>也可以设定为一个对象，指定最小行数和最大行数。</p>
                </div>
                <i-code lang="html" slot="code">{{ code.autosize }}</i-code>
            </demo>
            <demo title="禁用状态">
                <div slot="demo">
                    <i-row gutter="{{8}}">
                        <i-col span="12">
                            <i-input v-model="value9" disabled placeholder="请输入..."></i-input>
                        </i-col>
                        <i-col span="12">
                            <i-input v-model="value10" disabled type="textarea" placeholder="请输入..."></i-input>
                        </i-col>
                    </i-row>
                </div>
                <div slot="desc">
                    <p>通过添加<code>disabled</code>属性可设置为不可用状态。</p>
                </div>
                <i-code lang="html" slot="code">{{ code.disabled }}</i-code>
            </demo>
            <demo title="复合型输入框">
                <div slot="demo">
                    <i-input value="{=value11=}" prepend append>
                        <span slot="prepend">http://</span>
                        <span slot="append">.com</span>
                    </i-input>
                    <br>
                </div>
                <div slot="desc">
                    通过前置和后置的 slot 可以实现复合型的输入框。
                </div>
                <i-code lang="html" slot="code">{{ code.addon }}</i-code>
            </demo>
            <div class="api">
                <anchor title="API" h2></anchor>
                <anchor title="Input props" h3></anchor>
                <table>
                    <thead>
                        <tr>
                            <th>属性</th>
                            <th>说明</th>
                            <th>类型</th>
                            <th>默认值</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>type</td>
                            <td>输入框类型，可选值为 <code>text</code>、<code>password</code> 或 <code>textarea</code></td>
                            <td>String</td>
                            <td>text</td>
                        </tr>
                        <tr>
                            <td>value</td>
                            <td>绑定的值，可使用{=value=}双向绑定</td>
                            <td>String | Number</td>
                            <td>空</td>
                        </tr>
                        <tr>
                            <td>size</td>
                            <td>输入框尺寸，可选值为<code>large</code>、<code>small</code>、<code>default</code>或者不设置</td>
                            <td>String</td>
                            <td>-</td>
                        </tr>
                        <tr>
                            <td>placeholder</td>
                            <td>占位文本</td>
                            <td>String</td>
                            <td>-</td>
                        </tr>
                        <tr>
                            <td>disabled</td>
                            <td>设置输入框为禁用状态</td>
                            <td>Boolean</td>
                            <td>false</td>
                        </tr>
                        <tr>
                            <td>readonly</td>
                            <td>设置输入框为只读</td>
                            <td>Boolean</td>
                            <td>false</td>
                        </tr>
                        <tr>
                            <td>icon</td>
                            <td>输入框尾部图标，仅在 text 类型下有效</td>
                            <td>String</td>
                            <td>-</td>
                        </tr>
                        <tr>
                            <td>rows</td>
                            <td>文本域默认行数，仅在 textarea 类型下有效</td>
                            <td>Number</td>
                            <td>2</td>
                        </tr>
                        <tr>
                            <td>autosize</td>
                            <td>自适应内容高度，仅在 textarea 类型下有效，可传入对象，如 { minRows: 2, maxRows: 6 }</td>
                            <td>Object</td>
                            <td>-</td>
                        </tr>
                        <tr>
                            <td>autofocus</td>
                            <td>自动获取焦点</td>
                            <td>Boolean</td>
                            <td>false</td>
                        </tr>
                        <tr>
                            <td>autocomplete</td>
                            <td>原生的自动完成功能，可选值为 off 和 on</td>
                            <td>String</td>
                            <td>off</td>
                        </tr>
                    </tbody>
                </table>
                <anchor title="Input events" h3></anchor>
                <table>
                    <thead>
                        <tr>
                            <th>事件名</th>
                            <th>说明</th>
                            <th>返回值</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>on-input-keyenter</td>
                            <td>按下回车键时触发</td>
                            <td>无</td>
                        </tr>
                        <tr>
                            <td>on-input-clickicon</td>
                            <td>设置 icon 属性后，点击图标时触发</td>
                            <td>无</td>
                        </tr>
                        <tr>
                            <td>on-input-change</td>
                            <td>数据改变时触发</td>
                            <td>event</td>
                        </tr>
                        <tr>
                            <td>on-input-focus</td>
                            <td>输入框聚焦时触发</td>
                            <td>无</td>
                        </tr>
                        <tr>
                            <td>on-input-blur</td>
                            <td>输入框失去焦点时触发</td>
                            <td>无</td>
                        </tr>
                        <tr>
                            <td>on-input-keyup</td>
                            <td>原生的 keyup 事件</td>
                            <td>event</td>
                        </tr>
                        <tr>
                            <td>on-input-keydown</td>
                            <td>原生的 keydown 事件</td>
                            <td>event</td>
                        </tr>
                        <tr>
                            <td>on-input-keypress</td>
                            <td>原生的 keypress 事件</td>
                            <td>event</td>
                        </tr>
                    </tbody>
                </table>
                <anchor title="Input slot" h3></anchor>
                <table>
                    <thead>
                        <tr>
                            <th>名称</th>
                            <th>说明</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>prepend</td>
                            <td>前置内容，仅在 text 类型下有效</td>
                        </tr>
                        <tr>
                            <td>append</td>
                            <td>后置内容，仅在 text 类型下有效</td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </article>
    </div>
</template>
<script>
    import Code from 'code/input';
    import article from 'components/article';
    import anchor from 'components/anchor';
    import iCode from 'components/Code';
    import demo from 'components/demo';
    import {Icon, Row, Col, Input, Select, Button} from 'san-iview';

    export default {
        components: {
            'article': article,
            'i-code': iCode,
            'demo': demo,
            'anchor': anchor,
            'i-row': Row,
            'i-col': Col,
            'i-input': Input,
            'icon': Icon,
            'select': Select,
            'option': Select.Option,
            'i-button': Button
        },
        initData () {
            return {
                code: Code,
                value: '',
                value1: '',
                value2: '',
                value3: '',
                value4: '',
                value5: '',
                value6: '',
                value7: '',
                value8: '',
                value9: '',
                value10: '',
                value11: '',
                value12: '',
                value13: '',
                select1: 'http',
                select2: 'com',
                select3: 'day',
                autosize: {
                    minRows: 2,
                    maxRows: 5
                }
            }
        }
    }
</script>