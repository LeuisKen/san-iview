<style lang="stylus">
.doc-checkbox
    .view-icon
        font-size: 14px
</style>
<template>
    <div class="doc-checkbox">
        <article>
            <h1>checkbox 多选框</h1>
            <anchor title="概述" h2></anchor>
            <p>基本组件-多选框。主要用于一组可选项多项选择，或者单独用于标记切换某种状态。</p>
            <anchor title="代码示例" h2></anchor>
            <demo title="组合使用">
                <div slot="demo">
                    <checkbox-group value="{=social=}">
                        <checkbox label="twitter">
                            <icon type="social-twitter"></icon>
                            <span>Twitter</span>
                        </checkbox>
                        <checkbox label="facebook">
                            <icon type="social-facebook"></icon>
                            <span>Facebook</span>
                        </checkbox>
                        <checkbox label="github">
                            <icon type="social-github"></icon>
                            <span>Github</span>
                        </checkbox>
                        <checkbox label="snapchat">
                            <icon type="social-snapchat"></icon>
                            <span>Snapchat</span>
                        </checkbox>
                    </checkbox-group>
                    <p class="demo-data">{{ social }}</p>
                    <checkbox-group value="{=fruit=}">
                        <checkbox label="香蕉"></checkbox>
                        <checkbox label="苹果"></checkbox>
                        <checkbox label="西瓜"></checkbox>
                    </checkbox-group>
                    <p class="demo-data">{{ fruit }}</p>
                </div>
                <div slot="desc">
                    <p>使用<code>checkbox-group</code>配合数组来生成组合。在组合使用时，<code>checkbox</code> 使用 <code>label</code> 来自动判断选中状态。每个 checkbox 的内容可以自定义，如不填写则默认使用 label 的值。</p>
                </div>
                <i-code lang="html" slot="code">{{ code.group }}</i-code>
            </demo>
            <div class="api">
                <anchor title="API" h2></anchor>
                <anchor title="checkbox props" h3></anchor>
                <table>
                    <thead>
                        <tr>
                            <th>属性</th>
                            <th>说明</th>
                            <th>类型</th>
                            <th>默认值</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>label</td>
                            <td>只在组合使用时有效。指定当前选项的 value 值，组合会自动判断是否选中</td>
                            <td>String | Number | Boolean</td>
                            <td>-</td>
                        </tr>
                        <tr>
                            <td>disabled</td>
                            <td>是否禁用当前项</td>
                            <td>Boolean</td>
                            <td>false</td>
                        </tr>
                        <tr>
                            <td>indeterminate</td>
                            <td>设置 indeterminate 状态，只负责样式控制</td>
                            <td>Boolean</td>
                            <td>false</td>
                        </tr>
                        <tr>
                            <td>size</td>
                            <td>多选框的尺寸，可选值为 <code>large</code>、<code>small</code>、<code>default</code> 或者不设置</td>
                            <td>String</td>
                            <td>-</td>
                        </tr>
                    </tbody>
                </table>
                <anchor title="checkbox-group props" h3></anchor>
                <table>
                    <thead>
                        <tr>
                            <th>属性</th>
                            <th>说明</th>
                            <th>类型</th>
                            <th>默认值</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>value</td>
                            <td>指定选中项目的集合，可以使用双向绑定数据</td>
                            <td>Array</td>
                            <td>[]</td>
                        </tr>
                        <tr>
                            <td>size</td>
                            <td>多选框组的尺寸，可选值为 <code>large</code>、<code>small</code>、<code>default</code> 或者不设置</td>
                            <td>String</td>
                            <td>-</td>
                        </tr>
                    </tbody>
                </table>
                <anchor title="checkbox-group events" h3></anchor>
                <table>
                    <thead>
                        <tr>
                            <th>事件名</th>
                            <th>说明</th>
                            <th>返回值</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>on-select</td>
                            <td>在选项状态发生改变时触发，返回已选中的数组。通过修改外部的数据改变时不会触发</td>
                            <td>[...]</td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </article>
    </div>
</template>
<script>
    import Code from 'code/checkbox';
    import article from 'components/article';
    import anchor from 'components/anchor';
    import iCode from 'components/Code';
    import demo from 'components/demo';
    import {Icon, Row, Col, Input, Checkbox, Button} from 'san-iview';

    export default {
        components: {
            'article': article,
            'i-code': iCode,
            'demo': demo,
            'anchor': anchor,
            'i-row': Row,
            'i-col': Col,
            'i-input': Input,
            'icon': Icon,
            'checkbox': Checkbox,
            'checkbox-group': Checkbox.Group
        },
        initData () {
            return {
                code: Code,
                single: false,
                social: ['facebook', 'github'],
                fruit: ['苹果'],
                disabledSingle: true,
                disabledGroup: ['苹果'],
                checked: true,
                disabled: false,
                indeterminate: true,
                checkAll: false,
                checkAllGroup: ['香蕉', '西瓜']
            }
        },
        methods: {
            handleCheckAll () {
                if (this.indeterminate) {
                    this.checkAll = false;
                } else {
                    this.checkAll = !this.checkAll;
                }
                this.indeterminate = false;

                if (this.checkAll) {
                    this.checkAllGroup = ['香蕉', '苹果', '西瓜'];
                } else {
                    this.checkAllGroup = [];
                }
            },
            checkAllGroupChange (data) {
                if (data.length === 3) {
                    this.indeterminate = false;
                    this.checkAll = true;
                } else if (data.length > 0) {
                    this.indeterminate = true;
                    this.checkAll = false;
                } else {
                    this.indeterminate = false;
                    this.checkAll = false;
                }
            }
        }
    }
</script>